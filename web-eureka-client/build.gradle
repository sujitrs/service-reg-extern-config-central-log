plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

group = 'org.sj'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
palantirVersion='0.20.1'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven {
      url "https://plugins.gradle.org/m2/"
    }
}

ext {
	set('springCloudVersion', 'Greenwich.RELEASE')
}

bootJar {
    baseName = 'web-eureka-client'
    version =  '0.1.0'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'io.github.openfeign:feign-httpclient'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly('org.projectlombok:lombok')
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
// tag::task[]
task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}

docker {
    name "${project.group}/${bootJar.baseName}"
  	copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])   
}
